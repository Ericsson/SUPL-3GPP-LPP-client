/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "ULP-Version-2-message-extensions"
 * 	found in "src/SUPL.asn"
 * 	`asn1c -fcompound-names -no-gen-OER -no-gen-APER -no-gen-BER -no-gen-print -no-gen-random-fill -no-gen-example -fno-include-deps -pdu=all -S /usr/local/share/asn1c -D generated/ -S empty_skeleton/`
 */

#ifndef	_AllowedReportingType_H_
#define	_AllowedReportingType_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum AllowedReportingType {
	AllowedReportingType_positionsOnly	= 0,
	AllowedReportingType_measurementsOnly	= 1,
	AllowedReportingType_positionsAndMeasurements	= 2
	/*
	 * Enumeration is extensible
	 */
} e_AllowedReportingType;

/* AllowedReportingType */
typedef long	 AllowedReportingType_t;

/* Implementation */
extern asn_per_constraints_t asn_PER_type_AllowedReportingType_constr_1;
extern asn_TYPE_descriptor_t asn_DEF_AllowedReportingType;
extern const asn_INTEGER_specifics_t asn_SPC_AllowedReportingType_specs_1;
asn_struct_free_f AllowedReportingType_free;
asn_constr_check_f AllowedReportingType_constraint;
xer_type_decoder_f AllowedReportingType_decode_xer;
xer_type_encoder_f AllowedReportingType_encode_xer;
jer_type_encoder_f AllowedReportingType_encode_jer;
per_type_decoder_f AllowedReportingType_decode_uper;
per_type_encoder_f AllowedReportingType_encode_uper;

#ifdef __cplusplus
}
#endif

#endif	/* _AllowedReportingType_H_ */
#include <asn_internal.h>
