/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/martin/repos/LPP-Client/asn/LPP.asn"
 * 	`asn1c -fcompound-names -no-gen-OER -pdu=all -no-gen-example -S /home/martin/repos/LPP-Client/ASN1C/skeletons`
 */

#ifndef	_GNSS_AcquisitionAssistanceSupport_H_
#define	_GNSS_AcquisitionAssistanceSupport_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum GNSS_AcquisitionAssistanceSupport__confidenceSupport_r10 {
	GNSS_AcquisitionAssistanceSupport__confidenceSupport_r10_true	= 0
} e_GNSS_AcquisitionAssistanceSupport__confidenceSupport_r10;
typedef enum GNSS_AcquisitionAssistanceSupport__dopplerUncertaintyExtSupport_r10 {
	GNSS_AcquisitionAssistanceSupport__dopplerUncertaintyExtSupport_r10_true	= 0
} e_GNSS_AcquisitionAssistanceSupport__dopplerUncertaintyExtSupport_r10;

/* GNSS-AcquisitionAssistanceSupport */
typedef struct GNSS_AcquisitionAssistanceSupport {
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	long	*confidenceSupport_r10	/* OPTIONAL */;
	long	*dopplerUncertaintyExtSupport_r10	/* OPTIONAL */;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} GNSS_AcquisitionAssistanceSupport_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_confidenceSupport_r10_3;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_dopplerUncertaintyExtSupport_r10_5;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_GNSS_AcquisitionAssistanceSupport;
extern asn_SEQUENCE_specifics_t asn_SPC_GNSS_AcquisitionAssistanceSupport_specs_1;
extern asn_TYPE_member_t asn_MBR_GNSS_AcquisitionAssistanceSupport_1[2];

#ifdef __cplusplus
}
#endif

#endif	/* _GNSS_AcquisitionAssistanceSupport_H_ */
#include <asn_internal.h>
