/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/martin/repos/LPP-Client/asn/LPP.asn"
 * 	`asn1c -fcompound-names -no-gen-OER -pdu=all -no-gen-example -S /home/martin/repos/LPP-Client/ASN1C/skeletons`
 */

#ifndef	_GNSS_ID_Bitmap_H_
#define	_GNSS_ID_Bitmap_H_


#include <asn_application.h>

/* Including external dependencies */
#include <BIT_STRING.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum GNSS_ID_Bitmap__gnss_ids {
	GNSS_ID_Bitmap__gnss_ids_gps	= 0,
	GNSS_ID_Bitmap__gnss_ids_sbas	= 1,
	GNSS_ID_Bitmap__gnss_ids_qzss	= 2,
	GNSS_ID_Bitmap__gnss_ids_galileo	= 3,
	GNSS_ID_Bitmap__gnss_ids_glonass	= 4,
	GNSS_ID_Bitmap__gnss_ids_bds	= 5,
	GNSS_ID_Bitmap__gnss_ids_navic_v16xy	= 6
} e_GNSS_ID_Bitmap__gnss_ids;

/* GNSS-ID-Bitmap */
typedef struct GNSS_ID_Bitmap {
	BIT_STRING_t	 gnss_ids;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} GNSS_ID_Bitmap_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_GNSS_ID_Bitmap;
extern asn_SEQUENCE_specifics_t asn_SPC_GNSS_ID_Bitmap_specs_1;
extern asn_TYPE_member_t asn_MBR_GNSS_ID_Bitmap_1[1];

#ifdef __cplusplus
}
#endif

#endif	/* _GNSS_ID_Bitmap_H_ */
#include <asn_internal.h>
