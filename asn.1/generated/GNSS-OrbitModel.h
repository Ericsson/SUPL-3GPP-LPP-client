/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "/home/martin/repos/LPP-Client/asn/LPP.asn"
 * 	`asn1c -fcompound-names -no-gen-OER -pdu=all -no-gen-example -S /home/martin/repos/LPP-Client/ASN1C/skeletons`
 */

#ifndef	_GNSS_OrbitModel_H_
#define	_GNSS_OrbitModel_H_


#include <asn_application.h>

/* Including external dependencies */
#include "NavModelKeplerianSet.h"
#include "NavModelNAV-KeplerianSet.h"
#include "NavModelCNAV-KeplerianSet.h"
#include "NavModel-GLONASS-ECEF.h"
#include "NavModel-SBAS-ECEF.h"
#include "NavModel-BDS-KeplerianSet-r12.h"
#include "NavModel-BDS-KeplerianSet2-r16.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum GNSS_OrbitModel_PR {
	GNSS_OrbitModel_PR_NOTHING,	/* No components present */
	GNSS_OrbitModel_PR_keplerianSet,
	GNSS_OrbitModel_PR_nav_KeplerianSet,
	GNSS_OrbitModel_PR_cnav_KeplerianSet,
	GNSS_OrbitModel_PR_glonass_ECEF,
	GNSS_OrbitModel_PR_sbas_ECEF,
	/* Extensions may appear below */
	GNSS_OrbitModel_PR_bds_KeplerianSet_r12,
	GNSS_OrbitModel_PR_bds_KeplerianSet2_r16,
	GNSS_OrbitModel_PR_navic_KeplerianSet_r16
} GNSS_OrbitModel_PR;

/* GNSS-OrbitModel */
typedef struct GNSS_OrbitModel {
	GNSS_OrbitModel_PR present;
	union GNSS_OrbitModel_u {
		NavModelKeplerianSet_t	 keplerianSet;
		NavModelNAV_KeplerianSet_t	 nav_KeplerianSet;
		NavModelCNAV_KeplerianSet_t	 cnav_KeplerianSet;
		NavModel_GLONASS_ECEF_t	 glonass_ECEF;
		NavModel_SBAS_ECEF_t	 sbas_ECEF;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
		NavModel_BDS_KeplerianSet_r12_t	 bds_KeplerianSet_r12;
		NavModel_BDS_KeplerianSet2_r16_t	 bds_KeplerianSet2_r16;
		NavModelKeplerianSet_t	 navic_KeplerianSet_r16;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} GNSS_OrbitModel_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_GNSS_OrbitModel;
extern asn_CHOICE_specifics_t asn_SPC_GNSS_OrbitModel_specs_1;
extern asn_TYPE_member_t asn_MBR_GNSS_OrbitModel_1[8];
extern asn_per_constraints_t asn_PER_type_GNSS_OrbitModel_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _GNSS_OrbitModel_H_ */
#include <asn_internal.h>
