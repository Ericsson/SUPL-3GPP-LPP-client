/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "src/LPP-PDU-Definitions.asn"
 * 	`asn1c -fcompound-names -fno-include-deps -no-gen-example -pdu=all -gen-XER -gen-JER -no-gen-OER -gen-UPER -no-gen-APER -no-gen-BER -no-gen-print -no-gen-random-fill -D lpp_generated/ -S empty_skeleton/`
 */

#ifndef	_HA_GNSS_Metrics_r17_H_
#define	_HA_GNSS_Metrics_r17_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeInteger.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum HA_GNSS_Metrics_r17__fixType_r17 {
	HA_GNSS_Metrics_r17__fixType_r17_carrier_phase_float	= 0,
	HA_GNSS_Metrics_r17__fixType_r17_carrier_phase_fix	= 1
	/*
	 * Enumeration is extensible
	 */
} e_HA_GNSS_Metrics_r17__fixType_r17;

/* HA-GNSS-Metrics-r17 */
typedef struct HA_GNSS_Metrics_r17 {
	long	 nrOfUsedSatellites_r17;
	long	*hdopi_r17;	/* OPTIONAL */
	long	*pdopi_r17;	/* OPTIONAL */
	long	*age_r17;	/* OPTIONAL */
	long	*fixType_r17;	/* OPTIONAL */
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} HA_GNSS_Metrics_r17_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_fixType_r17_6;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_HA_GNSS_Metrics_r17;
extern asn_SEQUENCE_specifics_t asn_SPC_HA_GNSS_Metrics_r17_specs_1;
extern asn_TYPE_member_t asn_MBR_HA_GNSS_Metrics_r17_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _HA_GNSS_Metrics_r17_H_ */
#include <asn_internal.h>
