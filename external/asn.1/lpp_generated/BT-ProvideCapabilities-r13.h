/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "LPP-PDU-Definitions"
 * 	found in "src/LPP-PDU-Definitions.asn"
 * 	`asn1c -fcompound-names -fno-include-deps -no-gen-example -pdu=all -gen-XER -gen-JER -no-gen-OER -gen-UPER -no-gen-APER -no-gen-BER -no-gen-print -no-gen-random-fill -D lpp_generated/ -S empty_skeleton/`
 */

#ifndef	_BT_ProvideCapabilities_r13_H_
#define	_BT_ProvideCapabilities_r13_H_


#include <asn_application.h>

/* Including external dependencies */
#include <BIT_STRING.h>
#include <NativeEnumerated.h>
#include <constr_SEQUENCE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum BT_ProvideCapabilities_r13__bt_Modes_r13 {
	BT_ProvideCapabilities_r13__bt_Modes_r13_standalone	= 0,
	BT_ProvideCapabilities_r13__bt_Modes_r13_ue_assisted	= 1,
	BT_ProvideCapabilities_r13__bt_Modes_r13_ue_based_v1810	= 2
} e_BT_ProvideCapabilities_r13__bt_Modes_r13;
typedef enum BT_ProvideCapabilities_r13__bt_MeasSupported_r13 {
	BT_ProvideCapabilities_r13__bt_MeasSupported_r13_rssi_r13	= 0,
	BT_ProvideCapabilities_r13__bt_MeasSupported_r13_aod_v1800	= 1
} e_BT_ProvideCapabilities_r13__bt_MeasSupported_r13;
typedef enum BT_ProvideCapabilities_r13__ext1__idleStateForMeasurements_r14 {
	BT_ProvideCapabilities_r13__ext1__idleStateForMeasurements_r14_required	= 0
} e_BT_ProvideCapabilities_r13__ext1__idleStateForMeasurements_r14;
typedef enum BT_ProvideCapabilities_r13__ext3__bt_AoA_r18 {
	BT_ProvideCapabilities_r13__ext3__bt_AoA_r18_request_only	= 0,
	BT_ProvideCapabilities_r13__ext3__bt_AoA_r18_suggestion	= 1
} e_BT_ProvideCapabilities_r13__ext3__bt_AoA_r18;

/* Forward declarations */
struct PositioningModes;
struct ScheduledLocationTimeSupportPerMode_r17;

/* BT-ProvideCapabilities-r13 */
typedef struct BT_ProvideCapabilities_r13 {
	BIT_STRING_t	 bt_Modes_r13;
	BIT_STRING_t	 bt_MeasSupported_r13;
	/*
	 * This type is extensible,
	 * possible extensions are below.
	 */
	struct BT_ProvideCapabilities_r13__ext1 {
		long	*idleStateForMeasurements_r14;	/* OPTIONAL */
		struct PositioningModes	*periodicalReportingSupported_r14;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext1;
	struct BT_ProvideCapabilities_r13__ext2 {
		struct ScheduledLocationTimeSupportPerMode_r17	*scheduledLocationRequestSupported_r17;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext2;
	struct BT_ProvideCapabilities_r13__ext3 {
		long	*bt_AoA_r18;	/* OPTIONAL */
		
		/* Context for parsing across buffer boundaries */
		asn_struct_ctx_t _asn_ctx;
	} *ext3;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} BT_ProvideCapabilities_r13_t;

/* Implementation */
/* extern asn_TYPE_descriptor_t asn_DEF_idleStateForMeasurements_r14_11;	// (Use -fall-defs-global to expose) */
/* extern asn_TYPE_descriptor_t asn_DEF_bt_AoA_r18_17;	// (Use -fall-defs-global to expose) */
extern asn_TYPE_descriptor_t asn_DEF_BT_ProvideCapabilities_r13;
extern asn_SEQUENCE_specifics_t asn_SPC_BT_ProvideCapabilities_r13_specs_1;
extern asn_TYPE_member_t asn_MBR_BT_ProvideCapabilities_r13_1[5];

#ifdef __cplusplus
}
#endif

#endif	/* _BT_ProvideCapabilities_r13_H_ */
#include <asn_internal.h>
